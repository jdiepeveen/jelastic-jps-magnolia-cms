type: install
name: Basic Magnolia CMS
baseUrl: https://github.com/jdiepeveen/jelastic-jps-magnolia-cms/raw/master/magnolia-basic
engine: docker
ssl: true

globals:
  dbUsername: magnolia
  dbPassword: ${fn.password}
  tomcatDataPath: /data

settings:
  fields:
    - name: environment
      type: list
      caption: Environment
      required: true
      editable: true
      regex: "^[a-zA-Z0-9-]+$"
      values:
        test: test
        acceptance: acceptance
        production: production
    - name: authentication
      type: radio-fieldset
      caption: Authentication
      default: disabled
      values:
        enabled: Enabled authentication
        disabled: Disabled authentication
      showIf:
        enabled:
          - name: authUsername
            type: string
            caption: Username
            required: true
          - name: authPassword
            type: string
            caption: Password
            required: true

    - name: maintenance
      type: checkbox
      caption: Install default maintenance page
      value: true

nodes:
  - nodeType: docker
    image: nginx:alpine
    nodeGroup: bl
    cloudlets: 8
    volumes:
      - /etc/nginx/nginx.conf
      - /etc/nginx/conf.d
      - /etc/ssl
      - /usr/share/nginx/html
      - /var/log/nginx
    dockerRunCmd: nginx -g 'daemon off;'
    links:
      - cp:application

  - nodeType: docker
    image: tomcat:8.5-alpine
    nodeGroup: cp
    cloudlets: 16
    env:
      # Disable exposing ports to the outside
      JELASTIC_EXPOSE: DISABLED
      # Set environment and timezone variables
      CATALINA_OPTS: -Denvironment=${settings.environment} -Duser.timezone=Europe/Amsterdam
    volumes:
      - /usr/local/tomcat/webapps
#      /usr/local/tomcat/conf ? or server.xml etc..
      - /data
    links:
      -  db:db

  - nodeType: docker
    image: percona:latest
    nodeGroup: db
    cloudlets: 6
    env:
      # Disable exposing ports to the outside
      JELASTIC_EXPOSE: DISABLED

onInstall:
  - nginxAdjustWorkersCount
  - nginxConfigureDefaultConfig
  - tomcatRemoveWebapps

actions:
  nginxAdjustWorkersCount:
    log: "## Nginx - Updating worker_processes to 'auto' to make use of all available processors"
    cmd [bl]:
      # Increased the number of worker_processes from any number to auto
      - sed -i 's/\(worker_processes\s*\)[0-9]*;/\1auto;/' /etc/nginx/nginx.conf;
  nginxConfigureDefaultConfig:
    log: "## Nginx - Copy default config and replace server ip"
    cmd [bl]:
      - curl -fsSL ${baseUrl}/config/nginx/default.conf -o /etc/nginx/conf.d/default.conf
      - sed -i "s/@APP_SERVER_IP@/${nodes.cp[0].intIP}/g" /etc/nginx/conf.d/default.conf;
#      - sed -i "s/@APP_SERVER_IP_PUBLIC@/${nodes.cp[1].intIP}/g" /etc/nginx/conf.d/default.conf;
  tomcatRemoveWebapps:
    log: "## Tomcat - Removing unused webapps"
    forEach(cp:nodes.cp):
      cmd [${@cp.id}]:
        - rm -rf /usr/local/tomcat/webapps/ROOT
        - rm -rf /usr/local/tomcat/webapps/docs
        - rm -rf /usr/local/tomcat/webapps/examples
        - rm -rf /usr/local/tomcat/webapps/manager

  createMagnoliaDataDirectory:
    createDirectory [cp]: ${globals.tomcatDataPath}/magnolia
  createDatabase:
    cmd [sqldb]:
      - curl -fsSL ${baseUrl}/scripts/createDb.sh | /bin/bash -s ${nodes.sqldb.password} magnolia ${globals.dbPassword} ${nodes.cp.address}
  enableAuthentication:
    if (settings.authentication == 'enabled'):
      log: "## Basic authentication is enabled"
      cmd [bl]:
        - curl -fsSL ${baseUrl}/scripts/createHtaccess.sh | /bin/bash -s ${settings.authUsername} ${settings.authPassword}
        - curl -fsSL ${baseUrl}/config/nginx/conf.d/basic_auth.conf -o /etc/nginx/conf.d/basic_auth.conf
      appendFile [bl]:
        path: /etc/jelastic/redeploy.conf
        body: "/etc/nginx/conf.d/basic_auth.conf\n/etc/nginx/conf.d/password.htpasswd"
  enableMaintenance:
    if (settings.maintenance == true):
      log: "## Maintenance page is enabled"
      cmd [bl]:
        - curl -fsSL ${baseUrl}/config/nginx/conf.d/maintenance.inc -o /etc/nginx/conf.d/maintenance.inc
        - curl -fsSL ${baseUrl}/scripts/createMaintenance.sh | /bin/bash -s
      # Some replace in file for location / { and add include conf.d/maintenance.inc
      appendFile [bl]:
        path: /etc/jelastic/redeploy.conf
        body: "/etc/nginx/conf.d/basic_auth.conf\n/etc/nginx/conf.d/maintenance.inc"

onInstall:
  - createMagnoliaDataDirectory
  - createDatabase
  - enableAuthentication
  - enableMaintenance

description: |
  The JPS manifest contains the following containers:
  * Nginx
  * Tomcat 8.5
  * MariaDB 10

  SSL is enabled by default

success:
  text: |
    ### TLDR
    #### Database
    * url: `db:3306`
    * user: `${globals.dbUsername}`
    * password: `${globals.dbPassword}`
    #### Magnolia
    * Public: `magnolia.home=${globals.tomcatDataPath}/magnolia/public`
    * Author: `magnolia.home=${globals.tomcatDataPath}/magnolia/author`
    #### Authentication (if enabled)
    * username: `${settings.authUsername}`
    * password: `${settings.authPassword}`
    ---
    ### Magnolia settings
    #### Public:
    Create in your project the following folder:
    `/[project-webapp]/src/main/webapp/WEB-INF/config/${settings.environment}/ROOT/magnolia.properties`
    Add the following properties:
    `magnolia.home=${globals.tomcatDataPath}/magnolia/public`
    ##### DataSource:
    * url: `jdbc:mysql://db:3306/public`
    * user: `${globals.dbUsername}`
    * password: `${globals.dbPassword}`

    #### Author:
    Create in your project the following folder:
    `/[project-webapp]/src/main/webapp/WEB-INF/config/${settings.environment}/magnoliaAuthor/magnolia.properties`
    Add the following properties:
    `magnolia.home=${globals.tomcatDataPath}/magnolia/author`
    ##### DataSource:
    Use the following settings for the datasource:
    * url: `jdbc:mysql://db:3306/author`
    * user: `${globals.dbUsername}`
    * password: `${globals.dbPassword}`

logo: https://github.com/jdiepeveen/jelastic-jps-magnolia-cms/raw/master/images/view.png