type: install
name: Basic Magnolia CMS
baseUrl: https://github.com/jdiepeveen/jelastic-jps-magnolia-cms/raw/master/magnolia
engine: docker
ssl: true

globals:
  MGNL_REPO_PATH: /opt/data/magnolia
  CATALINA_HOME: /usr/local/tomcat

  DB_MYSQL_ROOT_PASSWORD: ${fn.password}
  DB_MYSQL_PASSWORD: ${fn.password}
  DB_MYSQL_DATABASE: magnolia-author

settings:
  fields:
    - name: environment
      type: list
      caption: Environment
      required: true
      editable: true
      regex: "^[a-zA-Z0-9-]+$"
      values:
        test: test
        acceptance: acceptance
        production: production
    - name: authentication
      type: radio-fieldset
      caption: Authentication
      default: disabled
      values:
        enabled: Enabled authentication
        disabled: Disabled authentication
      showIf:
        enabled:
          - name: authUsername
            type: string
            caption: Username
            required: true
          - name: authPassword
            type: string
            caption: Password
            required: true

    - name: maintenance
      type: checkbox
      caption: Install default maintenance page
      value: true

nodes:
  - nodeType: docker
    image: nginx:alpine
    nodeGroup: bl
    cloudlets: 8
    volumes:
      - /etc/nginx/nginx.conf
      - /etc/nginx/conf.d
      - /etc/ssl
      - /usr/share/nginx/html
      - /var/log/nginx
    # Override run command, to fix 'daemon off;' not recognized
    dockerRunCmd: nginx -g 'daemon off;'
#    Not connecting to proxy_pass http://application:8080 yet
#    links:
#      - cp:application

  - nodeType: docker
    image: tomcat:8.5-alpine
    nodeGroup: tomcat_author
    displayName: Magnolia author
    cloudlets: 12
    env:
      # Disable exposing ports to the outside
      JELASTIC_EXPOSE: DISABLED
      # Set environment and timezone variables
      CATALINA_OPTS: -Denvironment=${settings.environment} -Duser.timezone=Europe/Amsterdam
    volumes:
      - /usr/local/tomcat/webapps
      - /usr/local/tomcat/logs
      - /usr/local/tomcat/conf/tomcat-users.xml
      - /usr/local/tomcat/conf/server.xml
      - /opt/data
      - /backup
    links:
      - sqldb:db

  - nodeType: docker
    image: tomcat:8.5-alpine
    nodeGroup: tomcat_public
    displayName: Magnolia public
    cloudlets: 12
    env:
      # Disable exposing ports to the outside
      JELASTIC_EXPOSE: DISABLED
      # Set environment and timezone variables
      CATALINA_OPTS: -Denvironment=${settings.environment} -Duser.timezone=Europe/Amsterdam
    volumes:
      - /usr/local/tomcat/webapps
      - /usr/local/tomcat/logs
      - /usr/local/tomcat/conf/tomcat-users.xml
      - /usr/local/tomcat/conf/server.xml
      - /opt/data
      - /backup
    links:
      - sqldb:db

  - nodeType: docker
    image: percona:latest
    nodeGroup: sqldb
    cloudlets: 8
    env:
      # Disable exposing ports to the outside
      JELASTIC_EXPOSE: DISABLED
      MYSQL_ROOT_PASSWORD: ${globals.DB_MYSQL_ROOT_PASSWORD}
      MYSQL_USER: magnolia
      MYSQL_PASSWORD: ${globals.DB_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${globals.DB_MYSQL_DATABASE}

onInstall:
  - nginxAdjustWorkersCount
  - nginxConfigureDefaultConfig
  - tomcatSecurity
  - tomcatCreateMagnoliaDataDirectory

  # Addons
  - addonNginxControl

actions:
  nginxAdjustWorkersCount:
    log: "## Nginx - Updating worker_processes to 'auto' to make use of all available processors"
    cmd [bl]:
      # Increased the number of worker_processes from any number to auto
      - sed -i 's/\(worker_processes\s*\)[0-9]*;/\1auto;/' /etc/nginx/nginx.conf;

  nginxConfigureDefaultConfig:
    log: "## Nginx - Copy default config and replace server ip"
    cmd [bl]:
      - curl -fsSL ${baseUrl}/config/nginx/default.conf -o /etc/nginx/conf.d/default.conf
      - sed -i "s/@APP_SERVER_IP_AUTHOR@/${nodes.tomcat_author.intIP}/g" /etc/nginx/conf.d/default.conf;
      - sed -i "s/@APP_SERVER_IP_PUBLIC@/${nodes.tomcat_public.intIP}/g" /etc/nginx/conf.d/default.conf;
#      - nginx -s reload

  # See: https://github.com/eyaldahari/docker-secured-tomcat/blob/master/Dockerfile
  tomcatSecurity:
    log: "## Tomcat - Security hardened"
    forEach(node:nodes):
      if ("${@node.name}" == "tomcat"):
        cmd [${@node.id}]:
#    forEach(cp:nodes.cp):
#      cmd [${@cp.id}]:
        - rm -rf ${globals.CATALINA_HOME}/webapps/*
        - rm -rf ${globals.CATALINA_HOME}/work/Catalina/localhost/*
        - rm -rf ${globals.CATALINA_HOME}/conf/Catalina/localhost/*

        # Obscuring server info
        - mkdir -p ${globals.CATALINA_HOME}/lib/org/apache/catalina/util/
        - unzip ${globals.CATALINA_HOME}/lib/catalina.jar org/apache/catalina/util/ServerInfo.properties -d ${globals.CATALINA_HOME}/lib/
        - sed -i 's/server.info=.*/server.info=Apache Tomcat/g' ${globals.CATALINA_HOME}/lib/org/apache/catalina/util/ServerInfo.properties
        - apk --no-cache add zip
        - zip -ur ${globals.CATALINA_HOME}/lib/catalina.jar ${globals.CATALINA_HOME}/lib/org/apache/catalina/util/ServerInfo.properties
        - rm -rf ${globals.CATALINA_HOME}/lib/org

        # Replace the server version string from HTTP headers in server responses AND and secure="true" to <connector>
        - sed -i 's/<Connector/<Connector server="Apache" secure="true"/g' ${globals.CATALINA_HOME}/conf/server.xml

        # Make tomcat conf dir read only
        - chmod -R 400 ${globals.CATALINA_HOME}/conf

        # Capture stack traces to non-existent file
        - curl -fsSL ${baseUrl}/config/tomcat/error-page.xml.snippet -o ${globals.CATALINA_HOME}/error-page.xml.snippet
        - sed -i '$d' ${globals.CATALINA_HOME}/conf/web.xml
        - cat ${globals.CATALINA_HOME}/error-page.xml.snippet >> ${globals.CATALINA_HOME}/conf/web.xml
        - rm ${globals.CATALINA_HOME}/error-page.xml.snippet

  tomcatCreateMagnoliaDataDirectory:
    log: "## Tomcat - Creating magnolia repository directory"
#    forEach(cp:nodes.cp):
#      cmd [${@cp.id}]:
    forEach(node:nodes):
      if ("${@node.name}" == "tomcat"}:
        cmd [${@node.id}]:
        - mkdir ${globals.MGNL_REPO_PATH}


  addonNginxControl:
    install:
      jps: ${baseUrl}/addons/nginxControl.yaml
      nodeGroup: cp

  createDatabase:
    cmd [sqldb]:
      - curl -fsSL ${baseUrl}/scripts/createDb.sh | /bin/bash -s ${nodes.sqldb.password} magnolia ${globals.dbPassword} ${nodes.cp.address}
  enableAuthentication:
    if (settings.authentication == 'enabled'):
      log: "## Basic authentication is enabled"
      cmd [bl]:
        - curl -fsSL ${baseUrl}/scripts/createHtaccess.sh | /bin/bash -s ${settings.authUsername} ${settings.authPassword}
        - curl -fsSL ${baseUrl}/config/nginx/conf.d/basic_auth.conf -o /etc/nginx/conf.d/basic_auth.conf
      appendFile [bl]:
        path: /etc/jelastic/redeploy.conf
        body: "/etc/nginx/conf.d/basic_auth.conf\n/etc/nginx/conf.d/password.htpasswd"
  enableMaintenance:
    if (settings.maintenance == true):
      log: "## Maintenance page is enabled"
      cmd [bl]:
        - curl -fsSL ${baseUrl}/config/nginx/conf.d/maintenance.inc -o /etc/nginx/conf.d/maintenance.inc
        - curl -fsSL ${baseUrl}/scripts/createMaintenance.sh | /bin/bash -s
      # Some replace in file for location / { and add include conf.d/maintenance.inc
      appendFile [bl]:
        path: /etc/jelastic/redeploy.conf
        body: "/etc/nginx/conf.d/basic_auth.conf\n/etc/nginx/conf.d/maintenance.inc"

onInstall:
  - createMagnoliaDataDirectory
  - createDatabase
  - enableAuthentication
  - enableMaintenance

description: |
  The JPS manifest contains the following containers:
  * Nginx
  * Tomcat 8.5
  * MariaDB 10

  SSL is enabled by default

  ## Tomcat
  This Tomcat container was security hardened according to [OWASP recommondations](https://www.owasp.org/index.php/Securing_tomcat).

success:
  text: |

    ### Magnolia Author Instance
    URL: ${env.url}
    Catalina home: ${globals.CATALINA_HOME}
    Data: ${globals.MGNL_REPO_PATH}/author
    DB name: ${globals.DB_NAME_AUTHOR}
    DB user: magnolia@localhost

    ### Magnolia Public Instance
    URL: ${env.url}magnoliaAuthor/
    Catalina home: ${globals.CATALINA_HOME}
    Data: ${globals.MGNL_REPO_PATH}/public
    DB name: ${globals.DB_NAME_AUTHOR}
    DB user: magnolia@localhost

    ### Maintenance Mode
    Maintenance page:


    [Image here displaying ]
#    ### TLDR
#    #### Database
#    * url: `db:3306`
#    * user: `root`
#    * password: `${globals.dbPassword}`
#    #### Magnolia
#    * Public: `magnolia.home=${globals.MGNL_REPO_PATH}/public`
#    * Author: `magnolia.home=${globals.MGNL_REPO_PATH}/author`
#    #### Authentication (if enabled)
#    * username: `${settings.authUsername}`
#    * password: `${settings.authPassword}`
#    ---
#    ### Magnolia settings
#    #### Public:
#    Create in your project the following folder:
#    `/[project-webapp]/src/main/webapp/WEB-INF/config/${settings.environment}/ROOT/magnolia.properties`
#    Add the following properties:
#    `magnolia.home=${globals.tomcatDataPath}/magnolia/public`
#    ##### DataSource:
#    * url: `jdbc:mysql://db:3306/public`
#    * user: `${globals.dbUsername}`
#    * password: `${globals.dbPassword}`
#
#    #### Author:
#    Create in your project the following folder:
#    `/[project-webapp]/src/main/webapp/WEB-INF/config/${settings.environment}/magnoliaAuthor/magnolia.properties`
#    Add the following properties:
#    `magnolia.home=${globals.tomcatDataPath}/magnolia/author`
#    ##### DataSource:
#    Use the following settings for the datasource:
#    * url: `jdbc:mysql://db:3306/author`
#    * user: `${globals.dbUsername}`
#    * password: `${globals.dbPassword}`

logo: https://github.com/jdiepeveen/jelastic-jps-magnolia-cms/raw/master/images/view.png